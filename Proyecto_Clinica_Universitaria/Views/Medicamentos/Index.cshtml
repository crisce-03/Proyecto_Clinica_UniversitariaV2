@{
    ViewData["Title"] = "Medicamentos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using System.Collections.Generic
@using Proyecto_Clinica_Universitaria.Models
@model Proyecto_Clinica_Universitaria.Models.MedicamentoModel

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Mensaje"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<main class="p-3">

    <!-- BÚSQUEDA -->
    <section class="mb-3 bg-white p-3 rounded">
        <div class="d-flex justify-content-between align-items-center">
            <div class="input-group" style="max-width: 300px;">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input type="text" id="txtBuscar" class="form-control" placeholder="Buscar medicamento..." />
            </div>
            <div class="text-end">
                <span class="badge bg-warning text-dark p-2">
                    <i class="bi bi-capsule"></i> Medicamento(s)
                </span>
            </div>
        </div>
    </section>

    <!-- TABLA DE MEDICAMENTOS -->
    <section class="bg-white p-3 rounded mb-3">
        <div class="table-responsive" style="max-height:70vh; overflow-y:auto;">
            <table class="table table-hover align-middle" id="tblMed">
                <thead class="table-light" style="position: sticky; top: 0; z-index: 1;">
                    <tr>
                        <th style="width:68px;">Foto</th>
                        <th>ID</th>
                        <th>Medicamento</th>
                        <th>Descripción</th>
                        <th>Cantidad</th>
                        <th>Vencimiento</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var lista = ViewBag.Lista as List<MedicamentoModel>;
                    }
                    @if (lista != null && lista.Count > 0)
                    {
                        foreach (var it in lista)
                        {
                            var fechaIso = it.Vencimiento?.ToString("yyyy-MM-dd");
                            <tr class="row-med"
                                data-codigo="@it.Codigo"
                                data-medicamento="@it.Medicamento"
                                data-descripcion="@it.Descripcion"
                                data-cantidad="@it.Cantidad"
                                data-vencimiento="@fechaIso"
                                data-imagen="@it.Imagen">
                                <td class="text-center" style="width:68px;">
                                    <img class="foto img-thumbnail"
                                         data-src="@it.Imagen"
                                         alt="Imagen de @it.Medicamento"
                                         loading="lazy"
                                         style="width:56px;height:56px;object-fit:cover;" />
                                </td>
                                <td>@it.Codigo</td>
                                <td>@it.Medicamento</td>
                                <td>@it.Descripcion</td>
                                <td>@it.Cantidad</td>
                                <td>@(it.Vencimiento?.ToString("dd/MM/yyyy"))</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="6" class="text-center text-muted">Sin registros.</td></tr>
                    }
                </tbody>
            </table>
        </div>
        <small class="text-muted">Tip: haz clic en una fila para seleccionarla y luego usa los botones.</small>
    </section>

    <!-- BARRA DE ACCIONES -->
    <section class="d-flex flex-wrap justify-content-center gap-3 mt-4 p-3 bg-white rounded">
        <button type="button" id="btnNuevo"
                class="btn text-white px-3 py-2 d-flex align-items-center justify-content-center gap-2 flex-fill"
                style="background-color:#880C09;">
            <i class="bi bi-plus-circle"></i>
            <span class="d-none d-md-inline">Nuevo</span>
        </button>
        <button type="button" id="btnEditar"
                class="btn text-white px-3 py-2 d-flex align-items-center justify-content-center gap-2 flex-fill"
                style="background-color:#880C09;" disabled>
            <i class="bi bi-pen"></i>
            <span class="d-none d-md-inline">Editar</span>
        </button>
        <button type="button" id="btnEliminar"
                class="btn text-white px-3 py-2 d-flex align-items-center justify-content-center gap-2 flex-fill"
                style="background-color:#880C09;" disabled>
            <i class="bi bi-trash"></i>
            <span class="d-none d-md-inline">Eliminar</span>
        </button>
        <!-- Envía el formulario del modal -->
        <button type="submit" id="btnGuardar" form="frmMed"
                class="btn text-white px-3 py-2 d-flex align-items-center justify-content-center gap-2 flex-fill"
                style="background-color:#880C09;" disabled>
            <i class="bi bi-save"></i>
            <span class="d-none d-md-inline">Guardar</span>
        </button>
    </section>
</main>

<!-- Form oculto para eliminar -->
<form asp-action="Eliminar" asp-controller="Medicamentos" method="post" id="frmEliminar" class="d-none">
    @Html.AntiForgeryToken()
    <input type="hidden" name="codigo" id="hdnEliminarCodigo" />
</form>

<!-- MODAL eliminar -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered d-flex justify-content-center align-items-center">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body"><p id="confirmDeleteText" class="mb-0">¿Eliminar medicamento?</p></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="btnConfirmarEliminar" class="btn text-white" style="background-color:#880C09;">
                    <i class="bi bi-trash"></i> Aceptar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- MODAL: Crear/Editar Medicamento -->
<div class="modal fade" id="modalMedicamento" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable d-flex justify-content-center align-items-center">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Medicamento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form class="mt-1" asp-action="GuardarOEditar" asp-controller="Medicamentos" method="post" id="frmMed" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Código</label>
                        <input asp-for="Codigo" id="Codigo" class="form-control" readonly value="@(Model?.Codigo ?? 0)" />
                    </div>

                    <div class="mb-3">
                        <label for="Medicamento" class="form-label">Medicamento:</label>
                        <input asp-for="Medicamento" id="Medicamento" class="form-control" maxlength="100" required />
                    </div>

                    <div class="mb-3">
                        <label for="Descripcion" class="form-label">Descripción:</label>
                        <textarea asp-for="Descripcion" id="Descripcion" class="form-control" rows="2" maxlength="255"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="Cantidad" class="form-label">Cantidad:</label>
                        <input asp-for="Cantidad" id="Cantidad" type="number" class="form-control"
                               min="1" placeholder="Mínimo 1" required />
                    </div>

                    <div class="mb-3">
                        <label for="Vencimiento" class="form-label">Vencimiento:</label>
                        <input asp-for="Vencimiento" id="Vencimiento" type="date" class="form-control"
                               placeholder="Solo fechas futuras" />
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Imagen (se guarda la ruta/nombre):</label>
                        <div class="input-group">
                            <input asp-for="Imagen" id="Imagen" class="form-control" maxlength="255" />
                            <input type="file" id="fileImagen" name="imagenArchivo" accept="image/*" class="form-control" />
                        </div>
                        <small class="text-muted">Si subes un archivo a /uploads/medicamentos, este campo puede quedar solo con el nombre del archivo.</small>
                    </div>

                    <div class="mb-3">
                        <img id="previewImg" src="#" alt="" class="img-thumbnail d-none" style="max-height:110px;" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="btnGuardarModalMedicamento" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- MODAL: Advertencia antes de guardar -->
<div class="modal fade" id="modalAdvMed" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-warning">
            <div class="modal-header bg-warning">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    Revisa antes de guardar
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <ul class="mb-0">
                    <li><strong>Cantidad</strong> debe ser <strong>&ge; 1</strong>.</li>
                </ul>
                <small class="text-muted d-block mt-2">
                    Si el guardado falla, corrige los datos y vuelve a intentar.
                </small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Volver a editar</button>
                <button type="button" id="btnIntentarGuardarMed" class="btn btn-primary">Intentar guardar</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
      const $ = s => document.querySelector(s);
      const setVal = (id,v) => { const el=document.getElementById(id); if(el) el.value=(v??""); };
      const setDis = (el,b) => { if(el) el.disabled=!!b; };
      const hasBS = !!(window.bootstrap && bootstrap.Modal);

      // Placeholder gris para la columna Foto
      const PH = "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='56' height='56'><rect width='100%25' height='100%25' fill='%23e9ecef'/><text x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' font-size='9' fill='%236c757d'>Sin%20foto</text></svg>";

      function resolveImgPath(raw) {
        if (!raw) return "";
        const s = raw.trim();
        if (!s) return "";
        if (s.startsWith("/") || s.startsWith("http://") || s.startsWith("https://")) return s;
        return "/uploads/medicamentos/" + s;
      }

      // Inicializa miniaturas (columna Foto)
      document.querySelectorAll('img.foto').forEach(img=>{
        const raw = (img.dataset.src||"").trim();
        const src = resolveImgPath(raw);
        img.src = src || PH;
        img.onerror = () => { img.onerror=null; img.src = PH; };
      });

      let selRow=null, selId=0, selThumb=null;
      const btnNuevo=$("#btnNuevo"), btnEditar=$("#btnEditar"), btnEliminar=$("#btnEliminar"), btnGuardarBar=$("#btnGuardar");
      const txtBuscar=$("#txtBuscar"), txtImg=$("#Imagen"), fileImg=$("#fileImagen"), prev=$("#previewImg");

      const modalConfirmEl=document.getElementById('confirmDeleteModal'),
            btnConfirm=document.getElementById('btnConfirmarEliminar'),
            confirmText=$("#confirmDeleteText");

      const modalEl = document.getElementById('modalMedicamento');
      let modalMed = null;
      const openMed = () => {
        if (!hasBS) { alert("Falta Bootstrap JS (bootstrap.bundle.min.js) en _Layout."); return; }
        if (!modalMed) modalMed = new bootstrap.Modal(modalEl);
        modalMed.show();
      };

      const resetBtns = () => { setDis(btnEditar,true); setDis(btnEliminar,true); setDis(btnGuardarBar,true); };
      const enableAll = () => { setDis(btnEditar,false); setDis(btnEliminar,false); setDis(btnGuardarBar,false); };

      function clearPreview(){ if(prev){ prev.src="#"; prev.classList.add("d-none"); } }
      function tryShowPreviewFromText(){
        const raw = (txtImg?.value || "").trim();
        const v = resolveImgPath(raw);
        if (!v) { clearPreview(); if(selThumb) selThumb.src = PH; return; }
        if (prev){
          prev.src = v; prev.onload = ()=>prev.classList.remove("d-none"); prev.onerror = ()=>clearPreview();
        }
        if (selThumb){
          selThumb.src = v; selThumb.onerror = ()=>{ selThumb.onerror=null; selThumb.src = PH; };
          if (selRow) selRow.dataset.imagen = raw;
        }
      }

      resetBtns();

      // Filtro
      txtBuscar?.addEventListener("input", function(){
        const q = this.value.toLowerCase().trim();
        document.querySelectorAll("#tblMed tbody tr").forEach(tr=>{
          const t = (tr.innerText||"").toLowerCase();
          tr.style.display = t.includes(q) ? "" : "none";
        });
      });

      // File -> copiar nombre y preview local
      fileImg?.addEventListener("change", function(){
        const f = this.files && this.files[0];
        if (!f) return;
        if (txtImg) txtImg.value = f.name;
        if (prev){
          try { prev.src = URL.createObjectURL(f); prev.classList.remove("d-none"); } catch {}
        }
        if (selThumb){
          try { selThumb.src = URL.createObjectURL(f); } catch { selThumb.src = PH; }
          if (selRow) selRow.dataset.imagen = f.name;
        }
        setDis(btnGuardarBar,false);
      });

      // Click fila -> cargar al form (del modal)
      document.querySelectorAll("#tblMed tbody tr.row-med").forEach(tr=>{
        tr.addEventListener("click", ()=>{
          if (selRow) selRow.classList.remove("table-active");
          tr.classList.add("table-active"); selRow=tr; selId = parseInt(tr.dataset.codigo||"0");
          selThumb = tr.querySelector("img.foto");

          setVal("Codigo", tr.dataset.codigo);
          setVal("Medicamento", tr.dataset.medicamento);
          setVal("Descripcion", tr.dataset.descripcion);
          setVal("Cantidad", tr.dataset.cantidad);
          setVal("Vencimiento", tr.dataset.vencimiento);
          setVal("Imagen", tr.dataset.imagen);

          if (fileImg) fileImg.value = "";
          clearPreview();
          if ((tr.dataset.imagen||"").trim()) tryShowPreviewFromText();

          enableAll();
        });
      });

      // Nuevo -> limpiar y abrir modal
      btnNuevo?.addEventListener("click", ()=>{
        const form = document.getElementById("frmMed");
        form?.reset();
        setVal("Codigo", 0);
        if (selRow) selRow.classList.remove("table-active");
        selRow=null; selId=0; selThumb=null;
        if (fileImg) fileImg.value = "";
        clearPreview();
        setDis(btnEditar,true); setDis(btnEliminar,true); setDis(btnGuardarBar,false);
        openMed();
        setTimeout(() => document.getElementById("Medicamento")?.focus(), 150);
      });

      // Editar -> abrir modal
      btnEditar?.addEventListener("click", ()=>{
        if (!selId) { alert("Selecciona un medicamento."); return; }
        tryShowPreviewFromText();
        openMed();
        setTimeout(() => document.getElementById("Medicamento")?.focus(), 150);
      });

      // Establecer min (mañana) en el input date Vencimiento
      (function setMinVencimiento(){
        const d = new Date();
        d.setDate(d.getDate() + 1); // mañana
        const yyyy = d.getFullYear();
        const mm = String(d.getMonth()+1).padStart(2,'0');
        const dd = String(d.getDate()).padStart(2,'0');
        const minStr = `${yyyy}-${mm}-${dd}`;
        const v = document.getElementById('Vencimiento');
        if (v) v.min = minStr;
      })();

      /* ============================
         VALIDACIÓN SOLO-AL-FALLAR
         ============================ */

      function esFechaFutura(yyyy_mm_dd) {
        if (!yyyy_mm_dd) return false;
        const sel = new Date(yyyy_mm_dd + 'T00:00:00');
        const hoy = new Date(); hoy.setHours(0,0,0,0);
        const manana = new Date(hoy); manana.setDate(hoy.getDate() + 1);
        return sel.getTime() >= manana.getTime(); // mañana o posterior
      }

      function setInvalid(id, invalid){
        const el = document.getElementById(id);
        if (!el) return;
        if (invalid) el.classList.add('is-invalid'); else el.classList.remove('is-invalid');
      }

      function validarOMostrarAdvertencia() {
        const frm = document.getElementById('frmMed');
        const cEl = document.getElementById('Cantidad');
        const vEl = document.getElementById('Vencimiento');

        const cant = cEl && cEl.value !== '' ? Number(cEl.value) : NaN;
        const venc = vEl ? vEl.value : '';

        const cantInvalida = !(cant >= 1);
        const vencInvalido  = !esFechaFutura(venc);

        setInvalid('Cantidad', cantInvalida);
        setInvalid('Vencimiento', vencInvalido);

        if (cantInvalida || vencInvalido) {
          if (hasBS && document.getElementById('modalAdvMed')) {
            new bootstrap.Modal(document.getElementById('modalAdvMed')).show();
          } else {
            alert("Hay datos inválidos:\n- Cantidad debe ser ≥ 1\n- Vencimiento debe ser una fecha futura");
          }
          return false; // NO enviar
        }

        frm?.submit(); // Todo ok
        return true;
      }

      // Guardar (desde el modal): valida y solo muestra alerta si hay errores
      document.getElementById('btnGuardarModalMedicamento')?.addEventListener("click", (ev) => {
        ev.preventDefault();
        validarOMostrarAdvertencia();
      });

      // Botón del modal de advertencia: reintenta (revalida)
      document.getElementById('btnIntentarGuardarMed')?.addEventListener('click', function () {
        validarOMostrarAdvertencia();
      });

      // Defensa extra: si se dispara submit directo
      document.getElementById('frmMed')?.addEventListener('submit', function (ev) {
        const ok = validarOMostrarAdvertencia();
        if (!ok) ev.preventDefault();
      });

      // Eliminar → confirm
      btnEliminar?.addEventListener("click", ()=>{
        if (!selId) { alert("Selecciona un medicamento."); return; }
        document.getElementById("hdnEliminarCodigo").value = selId;
        if (confirmText) {
          const n = selRow?.dataset?.medicamento ?? "";
          confirmText.textContent = `¿Eliminar "${n}" (Código: ${selId})?`;
        }
        if (hasBS) new bootstrap.Modal(modalConfirmEl).show();
        else if (confirm(confirmText?.textContent || "¿Eliminar?")) document.getElementById("frmEliminar").submit();
      });
      btnConfirm?.addEventListener("click", ()=> document.getElementById("frmEliminar").submit());

      // Campo Imagen manual -> preview
      $("#Imagen")?.addEventListener("change", tryShowPreviewFromText);

      // Habilitar Guardar ante cambios del form
      document.addEventListener("input", (ev) => {
        if (ev.target.closest("#frmMed")) setDis(btnGuardarBar,false);
      });
      document.addEventListener("change", (ev) => {
        if (ev.target.closest("#frmMed")) setDis(btnGuardarBar,false);
      });
    });
</script>
